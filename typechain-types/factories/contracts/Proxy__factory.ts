/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Proxy, ProxyInterface } from "../../contracts/Proxy";

const _abi = [
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "getImplementationAddress",
    outputs: [
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwnerAddress",
    outputs: [
      {
        internalType: "address",
        name: "ownr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementationAddress",
        type: "address",
      },
    ],
    name: "setImplementationAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerAddress",
        type: "address",
      },
    ],
    name: "setOwnerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610512806100206000396000f3fe6080604052600436106100435760003560e01c80630c4f65bd146100cc5780630cbcae70146100f7578063331a6bf514610122578063ecade2f01461014b5761004a565b3661004a57005b61005e67b53db3b96085797060c01b610174565b610072679f290298efe88f4d60c01b610174565b61008667619f8e71b090a02060c01b610174565b6000610090610177565b90506100a66763864f410abebdf260c01b610174565b60405136600082376000803683855af43d6000833e80600081146100c8573d83f35b3d83fd5b3480156100d857600080fd5b506100e1610208565b6040516100ee91906103f6565b60405180910390f35b34801561010357600080fd5b5061010c610177565b60405161011991906103f6565b60405180910390f35b34801561012e57600080fd5b5061014960048036038101906101449190610442565b610299565b005b34801561015757600080fd5b50610172600480360381019061016d9190610442565b610327565b005b50565b600061018d67da5ba0ea8d57701760c01b610174565b6101a167087e47a2da1d367160c01b610174565b6101b567cec667b747ae958560c01b610174565b600060017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd60001c6101e791906104a8565b60001b90506102006768b478630a5ba9fc60c01b610174565b805491505090565b600061021e6729c025f408046dd760c01b610174565b61023267ff51703c01a2175560c01b610174565b61024667b4fd576690f9173560c01b610174565b600060017fa7b53796fd2d99cb1f5ae019b54f9e024446c3d12b483f733ccc62ed04eb126b60001c61027891906104a8565b60001b90506102916708b1f57c67a6077e60c01b610174565b805491505090565b6102ad671338c9a178ba70d160c01b610174565b6102c167e837b4b7ad02724060c01b610174565b6102d567a4d76f0edf43e79960c01b610174565b600060017fa7b53796fd2d99cb1f5ae019b54f9e024446c3d12b483f733ccc62ed04eb126b60001c61030791906104a8565b60001b90506103206787c35be65a24051360c01b610174565b8181555050565b61033b6773f0091d775f4fec60c01b610174565b61034f6766c54fc524f8d56760c01b610174565b61036367a7627783517f993460c01b610174565b600060017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd60001c61039591906104a8565b60001b90506103ae6743c0b2bc4fc0658760c01b610174565b8181555050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103e0826103b5565b9050919050565b6103f0816103d5565b82525050565b600060208201905061040b60008301846103e7565b92915050565b600080fd5b61041f816103d5565b811461042a57600080fd5b50565b60008135905061043c81610416565b92915050565b60006020828403121561045857610457610411565b5b60006104668482850161042d565b91505092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006104b38261046f565b91506104be8361046f565b9250828210156104d1576104d0610479565b5b82820390509291505056fea2646970667358221220c8ee63cae31b00c4042ceda89646a61ba2d38c4aa1e961780fe1c9e7fd091abe64736f6c634300080b0033";

type ProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Proxy__factory extends ContractFactory {
  constructor(...args: ProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Proxy> {
    return super.deploy(overrides || {}) as Promise<Proxy>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Proxy {
    return super.attach(address) as Proxy;
  }
  override connect(signer: Signer): Proxy__factory {
    return super.connect(signer) as Proxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyInterface {
    return new utils.Interface(_abi) as ProxyInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Proxy {
    return new Contract(address, _abi, signerOrProvider) as Proxy;
  }
}
